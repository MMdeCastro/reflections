How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Because it highlights the changes and bugs are new items

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    One can see good practises and how problems where solved in the past, assuming recorded screenshots are useful checkpoint

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    I like to decide it is a pro but if I am forgetful, it is a con

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is created to be used by developers (not just users) that need to handle dependencies 

How can you use the commands git log and git diff to view the history of files?

    git log (--stat) gives a report of all the checkpoints and you can compare them with git diff (commits IDs)

How might using version control make you more confident to make changes that
could break something?

    I can always come back to a previous non buggy version 

now that you have your workspace set up, what do you want to try using Git for?

    Create a new repo with a jupyter notebook and a .io web in Github
